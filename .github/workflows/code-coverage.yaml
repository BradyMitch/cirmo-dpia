name: Code Coverage
on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  generate-code-coverage-api:
    env:
      CC_TEST_REPORTER_ID: 861e868a6d2776ca55c53ef1ee5042f1de0db45137b89eeeda67e15549bfcdbf
    name: generate-code-coverage-api
    runs-on: ubuntu-latest
    steps:
    
      - name: Pull Git Repository
        uses: actions/checkout@v2
        
      - name: Download Code Climate Binary
        run: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter

      - name: Apply executable perms to Code Climate Binary
        run: chmod +x ./cc-test-reporter

      - name: WHERE AM I?
        run: |
          pwd 
          ls -al
          
      - name: Before build
        run: ./cc-test-reporter before-build

      - name: Set ENV for codeclimate (pull_request)
        run: |
          echo "GIT_BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
        if: github.event_name == 'pull_request'
        
      - name: Set ENV for codeclimate (push)
        run: |
          echo "GIT_BRANCH=$GITHUB_REF" >> GITHUB_ENV
          echo "GIT_COMMIT_SHA=$GITHUB_SHA" >> GITHUB_ENV
        if: github.event_name == 'push'
        
      # Trimming the ref to master in order to publish correct report !!PAAMBAATI!!
      - name: Set ref/head/master to master
        run: |
          echo "GIT_BRANCH=master" >> $GITHUB_ENV
        if: env.GIT_BRANCH == 'refs/heads/main'
        
      - name: Install Project Dependencies
        run: |
          npm --prefix ./src/backend ci
          
      - name: Generate Code Coverage 
        run: |
          npm --prefix ./src/backend run test-with-coverage
          
      - name: List Coverage File
        run: |
          ls -al ./src/backend/coverage
          
      - name: Format the API coverage report
        run: | 
          pushd .
          cd ${{github.workspace}}/src/backend/
          ${{github.workspace}}/cc-test-reporter format-coverage -t lcov -o ${{github.workspace}}/coverage/dpia-api.json coverage/lcov.info
          popd

      - name: List LCOV Formatted Report
        run: |
          ls ${{ github.workspace }}/coverage
          
      - name: Upload JSON for debugging purposes
        uses: actions/upload-artifact@v2
        with:
          name: formatted-api-coverage-report
          path: coverage/dpia-api.json
          
      - name: Upload coverage report to Code Climate
        run: ./cc-test-reporter upload-coverage -d -i coverage/dpia-api.lcov
          

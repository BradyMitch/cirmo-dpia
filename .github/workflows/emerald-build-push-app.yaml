name: EMERALD - Push WebApp to Artifactory

on: 
  workflow_dispatch:
  
jobs:
  DPIA-API-Build-Tag-Push:
    environment: APP-Dev
    runs-on: ubuntu-latest
    steps:
    
      # Checkout CIRMO-DPIA Github Repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
            
      - name: Login to Artifactory to Pull Images in S2I Build
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ secrets.ARTPROJ_PROJECT_URL }}
          username: ${{ secrets.ARTPROJ_SA_USERNAME }}
          password: ${{ secrets.ARTPROJ_SA_PASSWORD }}
      
      # Build the DPIA API Application Image via docker-compose
      - name: Build the Docker image
        run: |
          docker-compose build dpia-webapp
      
      # TROUBLESHOOTING - view images present in github action run
      - name: Docker List Images
        run: |
          docker image ls 
      
      # Tag Docker Image built with prod
      - name: Docker Tag Version
        run: |
          docker tag cirmo-dpia_dpia-webapp ${{ secrets.ARTPROJ_PROJECT_URL }}/daa7-dpia-image-repository/app-dev:latest

      # Push docker image to BC Gov Repository  
      - name: Docker Push Version
        run: |
          docker push ${{ secrets.ARTPROJ_PROJECT_URL }}/daa7-dpia-image-repository/app-dev:latest

  DEV-deploy:
    runs-on: ubuntu-latest
    environment: APP-Dev
    needs: [ DPIA-APP-Build-Tag-Push ]
    steps:

      # Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Trigger Tekton Pipeline Deployment
        env:
            ENVIRONMENT: dev
            APPLICATION: dpia-app
            IMAGE: 'app-dev:latest'
            templateURL: ${{ secrets.templateURL }} 
          run: |
            ./.github/helpers/tekton-trigger.sh

  # TODO Build health check in tekton

  # TODO Build Cleanup in tekton

  DEV-Success-Notify:
    runs-on: ubuntu-latest
    environment: APP-Dev
    needs: [ DEV-cleanup ]
    steps:
      - name: Message Teams Channel on Success
        run: |
          curl --location --request POST ${{ secrets.TEAMS_SUCCESS_URL }} \
          --header 'Content-Type: text/plain' \
          --data-raw '{
            "@context": "https://schema.org/extensions",
            "@type": "MessageCard",
            "themeColor": "0072C6",
            "title": "SUCCESS! APP Deployment to PIA EMERALD ${{ secrets.ENVIRONMENT }} Environment has finished.",
            "text": "The PIA APP has been built and deployed to the EMERALD ${{ secrets.ENVIRONMENT }} environment. \n\n The logs for the successful deployment can be found [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\n\n The changes for commit ${{ github.sha }} can be found [here](https://dev.pia.gov.bc.ca/api/api-docs).",
          }'

  DEV-Failure-Notify:
    runs-on: ubuntu-latest
    environment: API-Dev
    if: failure()
    steps:
      - name: Message Teams Channel on Failure
        run: |
          curl --location --request POST ${{ secrets.TEAMS_FAILURE_URL }} \
          --header 'Content-Type: text/plain' \
          --data-raw '{
            "@context": "https://schema.org/extensions",
            "@type": "MessageCard",
            "themeColor": "0072C6",
            "title": "FAILURE! APP Deployment to the PIA ${{ secrets.ENVIRONMENT }} Environment has failed.",
            "text": "The PIA APP has NOT been built and deployed to the ${{ secrets.LICENSE_PLATE }} ${{ secrets.ENVIRONMENT }} environment.\n\n Please review the Github Action for this deployment (here)[${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}].",
          }'


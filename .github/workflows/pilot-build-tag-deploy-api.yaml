name: API Pilot Pipeline

on:
  workflow_dispatch:
  
jobs:
  PILOT-API-Build-Tag-Push:
    runs-on: ubuntu-latest
    environment: APP-Dev
    steps:

      # Checkout CIRMO-DPIA Github Repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Login the BC Gov Openshift (DPIA TOOLS Namespace)
      - name: Cluster Login -> TOOLS Namespace
        uses: redhat-developer/openshift-actions@v1.1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
          parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_TOOLS_SA_PASSWORD }}"}'
          cmd: |
            'version'
            
      # Login to BC Gov Docker Image Repository
      - name: Login to Openshift Docker
        run : |
          docker login ${{ secrets.OPENSHIFT4_PUBLIC_IMAGE_REPOSITORY_BASE_URL }} -u ${{ secrets.OPENSHIFT4_TOOLS_SA_USERNAME }} -p ${{ secrets.OPENSHIFT4_TOOLS_SA_PASSWORD }}
          
      # Setup environment variables
      - name: Setup environment
        run: |
          make api-setup-env
      
      # Build the DPIA API Application Image via docker-compose
      - name: Build the Docker image
        run: |
          docker-compose build dpia-api
      
      # TROUBLESHOOTING - view images present in github action run
      - name: Docker List Images
        run: |
          docker image ls 
      
      # Tag Docker Image built with latest
      - name: Docker Tag Version
        run: |
          docker tag cirmo-dpia_dpia-api image-registry.apps.silver.devops.gov.bc.ca/b996e6-tools/pilot-api-dev:latest

      # Push docker image to BC Gov Repository  
      - name: Docker Push Version
        run: |
          docker push image-registry.apps.silver.devops.gov.bc.ca/b996e6-tools/pilot-api-dev:latest
          
  PILOT-API-Deploy:
    runs-on: ubuntu-latest
    environment: API-Dev
    needs: [ PIA-API-Build-Tag-Push ]
    steps:
    
      # Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      # Login to BC Gov Openshift (DPIA DEV Namespace)
      - name: Cluster Login -> DEV Namespace
        uses: redhat-developer/openshift-actions@v1.1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
          parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_SA_PASSWORD }}"}'
          cmd: |
            'version'

      # Use deploy helper script to process and apply DPIA API Application template into DEV namespace
      - name: Process and Apply API DeploymentConfig, Service, Route templates
        env:
          NAMESPACE: "${{ secrets.OPENSHIFT_DEV_NAMESPACE }}"
          APPLICATION_NAME: "${{ secrets.APPLICATION_NAME }}-pilot"
          LICENSE_PLATE: "${{ secrets.LICENSE_PLATE }}"
          ENVIRONMENT: "${{ secrets.ENVIRONMENT }}"
          DC_TEMPLATE: "api-dc-template.yaml"
          SERVICE_TEMPLATE: "api-service-template.yaml"
          ROUTE_TEMPLATE: "api-route-template.yaml"
          DIR: "api/pilot"
          IMAGESTREAM: "pilot-api-dev"
        run: |
          ./.github/helpers/deploy.sh 

  PILOT-API-health-check:
    runs-on: ubuntu-latest
    environment:
      name: API-Dev
    needs: [ PILOT-API-deploy ]
    steps:
    
      # Checkout Repository
      - uses: actions/checkout@v2
    
      # Login to BC Gov Openshift (DPIA DEV Namespace)
      - name: Cluster Login -> DEV Namespace
        uses: redhat-developer/openshift-actions@v1.1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
          parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_SA_PASSWORD }}"}'
          cmd: |
            'version'
            
      # Use application health helper script to monitor readiness/liveness probe response post deployment  
      - name: Health Check DEV deployment
        env:
          NAMESPACE: "${{ secrets.OPENSHIFT_DEV_NAMESPACE }}"
          APPLICATION_NAME: "${{ secrets.APPLICATION_NAME }}-pilot"
        run: |
          ./.github/helpers/application-health.sh

  PILOT-API-cleanup:
    runs-on: ubuntu-latest
    environment: API-Dev
    needs: [ PILOT-API-health-check ]
    steps:

      # Checkout Repository
      - uses: actions/checkout@v2

      # Login to BC Gov Openshift (DPIA DEV Namespace)
      - name: Cluster Login
        uses: redhat-developer/openshift-actions@v1.1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
          parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_SA_PASSWORD }}"}'
          cmd: |
            'version'

      # Use cleanup helper script to remove any leftover deployment pod objects from previous deployment
      - name: Cleanup previous deployment pod objects
        env:
          NAMESPACE: "${{ secrets.OPENSHIFT_DEV_NAMESPACE }}"
        run: |
          ./.github/helpers/cleanup-pods.sh

      # Use cleanup helper script to remove any leftover deployment pod objects from previous deployment
      - name: Cleanup previous replication controller objects
        env:
          NAMESPACE: "${{ secrets.OPENSHIFT_DEV_NAMESPACE }}"
        run: |
          ./.github/helpers/cleanup-rc.sh

name: Github Environment - DPIA API 

on:
  push:
    branches: [main]
    paths:
      - "src/backend/**"
  workflow_dispatch:
  
jobs:
  DPIA-API-Build-Tag-Push:
    environment: Dev
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Cluster Login -> TOOLS Namespace
        uses: redhat-developer/openshift-actions@v1.1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
          parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_TOOLS_SA_PASSWORD }}"}'
          cmd: |
            'version'
            
      - name: Login to Openshift Docker
        run : |
          docker login ${{ secrets.OPENSHIFT4_PUBLIC_IMAGE_REPOSITORY_BASE_URL }} -u ${{ secrets.OPENSHIFT4_TOOLS_SA_USERNAME }} -p ${{ secrets.OPENSHIFT4_TOOLS_SA_PASSWORD }}
          
      - name: Build the Docker image
        run: |
          docker-compose build dpia-api
      
      - name: Docker List Images
        run: |
          docker image ls 
          
      - name: Set Commit Hash for Image Tag
        run: |
          commit_hash=$(echo $(git rev-parse --short HEAD))
          echo "pull_request_hash=$commit_hash" >> $GITHUB_ENV
          
      - name: Create JSON file for Image Tag State
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: 'pull-request.json'
          json: '{ "hash":"${{ env.pull_request_hash }}" }'
          
      - name: Upload JSON file
        uses: actions/upload-artifact@v3
        with: 
          name: pull-request.json
          path: pull-request.json
      
      - name: Docker Tag Version
        run: |
          docker tag cirmo-dpia_dpia-api ${{ secrets.OPENSHIFT4_API_PUBLIC_IMAGE_REPOSITORY }}:${{ env.pull_request_hash }}
      
      - name: Docker List Images
        run: |
          docker image ls 
          
      - name: Docker Push Version
        run: |
          docker push ${{ secrets.OPENSHIFT4_API_PUBLIC_IMAGE_REPOSITORY }}:${{ env.pull_request_hash }}
          
  DEV-deploy:
    runs-on: ubuntu-latest
    environment: Dev
    needs: [DPIA-API-Build-Tag-Push]
    steps:
    
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Cluster Login -> DEV Namespace
        uses: redhat-developer/openshift-actions@v1.1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
          parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_SA_PASSWORD }}"}'
          cmd: |
            'version'
            
      - name: Download JSON artifact
        uses: actions/download-artifact@v3
        with:
          name: pull-request.json
          
      - name: Read JSON File
        id: json-file
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'pull-request.json'
          prop_path: 'hash'
          
      - name: Set Commit Hash Value to Environment
        run: |
          commit_hash=$(echo ${{ steps.json-file.outputs.prop }})
          echo "pull_request_hash=$commit_hash" >> $GITHUB_ENV
          echo "PULL REQUEST HASH"
          echo ${{ env.pull_request_hash }}
 
      - name: OC GET
        run: |
          dc_name=$(echo $(oc get dc --namespace=${{ secrets.OPENSHIFT_DEV_NAMESPACE }} | awk 'FNR == 2 {print $1}'))
          echo "previous_dc_name=$dc_name" >> $GITHUB_ENV
          echo "PREVIOUS DC NAME"
          echo "${{ env.previous_dc_name }}"
          
      - name: Create JSON file for Image Tag State
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: 'dev-deploy.json'
          json: '{ "hash":"${{ env.pull_request_hash }}", "dc_name":"${{ env.previous_dc_name}}"}'

      - name: Upload JSON file
        uses: actions/upload-artifact@v3
        with: 
          name: dev-deploy.json
          path: dev-deploy.json
            
      - name: Process and Apply API Deployment Config Template
        env:
          NAMESPACE: "${{ secrets.OPENSHIFT_DEV_NAMESPACE }}"
          APPLICATION_NAME: "${{ secrets.API_APPLICATION_NAME }}"
          LICENSE_PLATE: "${{ secrets.LICENSE_PLATE }}"
          ENVIRONMENT: "${{ secrets.ENVIRONMENT }}"
          DEPLOYMENT_CONFIG: api-dc-template.yaml
          IMAGE_TAG: ${{ env.pull_request_hash }}
        run: |
          ./.github/helpers/deploy.sh 

      - name: Process and Apply API Service Template
        env:
          NAMESPACE: "${{ secrets.OPENSHIFT_DEV_NAMESPACE }}"
          APPLICATION_NAME: "${{ secrets.API_APPLICATION_NAME }}"
          LICENSE_PLATE: "${{ secrets.LICENSE_PLATE }}"
          ENVIRONMENT: "${{ secrets.ENVIRONMENT }}"
          DEPLOYMENT_CONFIG: api-service.yaml
          IMAGE_TAG: ${{ env.pull_request_hash }}
        run: |
          ./.github/helpers/deploy.sh 

      - name: Process and Apply API Route Template
        env:
          NAMESPACE: "${{ secrets.OPENSHIFT_DEV_NAMESPACE }}"
          APPLICATION_NAME: "${{ secrets.API_APPLICATION_NAME }}"
          LICENSE_PLATE: "${{ secrets.LICENSE_PLATE }}"
          ENVIRONMENT: "${{ secrets.ENVIRONMENT }}"
          DEPLOYMENT_CONFIG: api-route.yaml
          IMAGE_TAG: ${{ env.pull_request_hash }}
        run: |
          ./.github/helpers/deploy.sh 
    
  DEV-health-check:
    runs-on: ubuntu-latest
    environment: Dev
    needs: [DPIA-API-Build-Tag-Push, DEV-deploy]
    steps:
    
      - uses: actions/checkout@v2
    
      - name: Cluster Login
        uses: redhat-developer/openshift-actions@v1.1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
          parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_SA_PASSWORD }}"}'
          cmd: |
            'version'

      - name: Download JSON artifact
        uses: actions/download-artifact@v3
        with:
          name: dev-deploy.json
          
      - name: Read JSON File
        id: json-file-hash
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'dev-deploy.json'
          prop_path: 'hash'

      - name: Read JSON File
        id: json-file-dc-name
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'dev-deploy.json'
          prop_path: 'dc_name'
          
      - name: Set Commit Hash Value to Environment
        run: |
          commit_hash=$(echo ${{ steps.json-file-hash.outputs.prop }})
          echo "pull_request_hash=$commit_hash" >> $GITHUB_ENV
          echo "PULL REQUEST HASH"
          echo ${{ env.pull_request_hash }}
          dc_name=$(echo ${{ steps.json-file-dc-hash.outputs.prop }})
          echo "previous_dc_name=$dc_name" >> $GITHUB_ENV
          echo "PREVIOUS DC NAME"
          echo ${{ env.previous_dc_name }}
            
      - name: Health Check DEV deployment
        env:
          NAMESPACE: "${{ secrets.OPENSHIFT_DEV_NAMESPACE }}"
          APPLICATION_NAME: "${{ secrets.API_APPLICATION_NAME }}"
          LICENSE_PLATE: "${{ secrets.LICENSE_PLATE }}"
          ENVIRONMENT: "${{ secrets.ENVIRONMENT }}"
          IMAGE_TAG: "${{ env.pull_request_hash }}"
        run: |
          ./.github/helpers/application-health.sh

  DEV-cleanup-previous-deploy:
    runs-on: ubuntu-latest
    environment: Dev
    needs: [DPIA-API-Build-Tag-Push, DEV-deploy, DEV-health-check]
    steps:

      - name: Download JSON artifact
        uses: actions/download-artifact@v3
        with:
          name: pull-request.json

      - name: Read JSON File - hash value
        id: json-file-hash
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'pull-request.json'
          prop_path: 'hash'
          
      - name: Read JSON File - hash value
        id: json-file-previous-deploy
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'pull-request.json'
          prop_path: 'previous_dc_name'

      - name: Set Commit Hash Value and Previous Deploy Name to Environemtn
        run: |
          commit_hash=$(echo ${{ steps.json-file-hash.outputs.prop }})
          echo "pull_request_hash=$commit_hash" >> $GITHUB_ENV
          echo "PULL REQUEST HASH"
          echo ${{ env.pull_request_hash }}
          dc_name=$(echo ${{ steps.json-file-previous-deploy.outputs.prop }})
          echo "previous_deploy_name=$dc_name" >> $GITHUB_ENV
          echo "PREVIOUS DEPLOY NAME"
          echo ${{ env.previous_deploy_name }}

      
  # TEST-tag-dpia-api-image:
  #   environment: Test
  #   runs-on: ubuntu-latest
  #   needs: [DPIA-API-Build-Tag-Push, DEV-deploy, DEV-health-check]
  #   steps:
    
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2
        
  #     - name: Cluster Login -> TOOLS Namespace
  #       uses: redhat-developer/openshift-actions@v1.1
  #       with:
  #         openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
  #         parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_TOOLS_SA_PASSWORD }}"}'
  #         cmd: |
  #           'version'
            
  #     - name: Login to Openshift Docker
  #       run : |
  #         docker login ${{ secrets.OPENSHIFT4_PUBLIC_IMAGE_REPOSITORY_BASE_URL }} -u ${{ secrets.OPENSHIFT4_TOOLS_SA_USERNAME }} -p ${{ secrets.OPENSHIFT4_TOOLS_SA_PASSWORD }}
        
  #     - name: Download JSON artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: pull-request-hash.json
          
  #     - name: Read JSON File
  #       id: json-file
  #       uses: notiz-dev/github-action-json-property@release
  #       with:
  #         path: 'pull-request-hash.json'
  #         prop_path: 'hash'
          
  #     - name: Set Commit Hash Value to Environment
  #       run: |
  #         commit_hash=$(echo ${{ steps.json-file.outputs.prop }})
  #         echo "pull_request_hash=$commit_hash" >> $GITHUB_ENV
  #         echo "PULL REQUEST HASH"
  #         echo ${{ env.pull_request_hash }}
        
  #     - name: Update tag for Imagestream
  #       env:
  #         TOOLS_NAMESPACE: "${{ secrets.TOOLS_NAMESPACE }}"
  #         DPIA_COMPONENT: "dpia-api"
  #         HASH_IMAGE: "${{ env.pull_request_hash }}"
  #         ENVIRONMENT: "test"
  #       run: |
  #         ./.github/helpers/tag-imagestream.sh
          
  # TEST-deploy:
  #   environment: Test
  #   runs-on: ubuntu-latest
  #   needs: [DPIA-API-Build-Tag-Push, DEV-deploy, DEV-health-check, TEST-tag-dpia-api-image]
  #   steps:
      
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2 
        
  #     - name: Cluster Login -> TEST Namespace
  #       uses: redhat-developer/openshift-actions@v1.1
  #       with:
  #         openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
  #         parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_SA_PASSWORD }}"}'
  #         cmd: |
  #           'version'
        
  #     - name: Download JSON artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: pull-request-hash.json
          
  #     - name: Read JSON File
  #       id: json-file
  #       uses: notiz-dev/github-action-json-property@release
  #       with:
  #         path: 'pull-request-hash.json'
  #         prop_path: 'hash'
          
  #     - name: Set Commit Hash Value to Environment
  #       run: |
  #         commit_hash=$(echo ${{ steps.json-file.outputs.prop }})
  #         echo "pull_request_hash=$commit_hash" >> $GITHUB_ENV
  #         echo "PULL REQUEST HASH"
  #         echo ${{ env.pull_request_hash }}
          
  #     - name: Deploy to TEST
  #       env:
  #         NAMESPACE: "${{ secrets.OPENSHIFT_TEST_NAMESPACE }}"
  #         APPLICATION_NAME: "${{ secrets.API_APPLICATION_NAME }}"
  #         LICENSE_PLATE: "${{ secrets.LICENSE_PLATE }}"
  #         ENVIRONMENT: "${{ secrets.ENVIRONMENT }}"
  #         DEPLOYMENT_CONFIG: api-dc-template.yaml
  #         IMAGE_TAG: ${{ env.pull_request_hash }}-test
  #       run: |
  #         ./.github/helpers/deploy.sh 
          
  # TEST-health-check:
  #   runs-on: ubuntu-latest
  #   environment: Test
  #   needs: [DPIA-API-Build-Tag-Push, DEV-deploy, DEV-health-check, TEST-tag-dpia-api-image, TEST-deploy]
  #   steps:
    
  #     - uses: actions/checkout@v2
    
  #     - name: Cluster Login
  #       uses: redhat-developer/openshift-actions@v1.1
  #       with:
  #         openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
  #         parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_SA_PASSWORD }}"}'
  #         cmd: |
  #           'version'
            
  #     - name: Health Check TEST deployment
  #       env:
  #         NAMESPACE: "${{ secrets.OPENSHIFT_TEST_NAMESPACE }}"
  #         APPLICATION_NAME: "${{ secrets.API_APPLICATION_NAME }}"
  #         LICENSE_PLATE: "${{ secrets.LICENSE_PLATE }}"
  #         ENVIRONMENT: "${{ secrets.ENVIRONMENT }}"
  #       run: |
  #         ./.github/helpers/application-health.sh
    
  # PROD-tag-dpia-api-image:
  #   environment: Prod
  #   runs-on: ubuntu-latest
  #   needs: [DPIA-API-Build-Tag-Push, DEV-deploy, DEV-health-check, TEST-tag-dpia-api-image, TEST-deploy, TEST-health-check]
  #   steps:

  #     - name: Checkout Repository
  #       uses: actions/checkout@v2

  #     - name: Cluster Login -> TOOLS Namespace
  #       uses: redhat-developer/openshift-actions@v1.1
  #       with:
  #         openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
  #         parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_TOOLS_SA_PASSWORD }}"}'
  #         cmd: |
  #           'version'

  #     - name: Login to Openshift Docker
  #       run : |
  #         docker login ${{ secrets.OPENSHIFT4_PUBLIC_IMAGE_REPOSITORY_BASE_URL }} -u ${{ secrets.OPENSHIFT4_TOOLS_SA_USERNAME }} -p ${{ secrets.OPENSHIFT4_TOOLS_SA_PASSWORD }}

  #     - name: Download JSON artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: pull-request-hash.json

  #     - name: Read JSON File
  #       id: json-file
  #       uses: notiz-dev/github-action-json-property@release
  #       with:
  #         path: 'pull-request-hash.json'
  #         prop_path: 'hash'

  #     - name: Set Commit Hash Value to Environment
  #       run: |
  #         commit_hash=$(echo ${{ steps.json-file.outputs.prop }})
  #         echo "pull_request_hash=$commit_hash" >> $GITHUB_ENV
  #         echo "PULL REQUEST HASH"
  #         echo ${{ env.pull_request_hash }}

  #     - name: Update tag for Imagestream
  #       env:
  #         TOOLS_NAMESPACE: "${{ secrets.TOOLS_NAMESPACE }}"
  #         DPIA_COMPONENT: "dpia-api"
  #         HASH_IMAGE: "${{ env.pull_request_hash }}"
  #         ENVIRONMENT: "prod"
  #       run: |
  #         ./.github/helpers/tag-imagestream.sh
          
  # PROD-deploy:
  #   environment: Prod
  #   runs-on: ubuntu-latest
  #   needs: [DPIA-API-Build-Tag-Push, DEV-deploy, DEV-health-check, TEST-tag-dpia-api-image, TEST-deploy, TEST-health-check, PROD-tag-dpia-api-image]
  #   steps:

  #     - name: Checkout Repository
  #       uses: actions/checkout@v2 

  #     - name: Cluster Login -> PROD Namespace
  #       uses: redhat-developer/openshift-actions@v1.1
  #       with:
  #         openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
  #         parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_SA_PASSWORD }}"}'
  #         cmd: |
  #           'version'

  #     - name: Download JSON artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: pull-request-hash.json

  #     - name: Read JSON File
  #       id: json-file
  #       uses: notiz-dev/github-action-json-property@release
  #       with:
  #         path: 'pull-request-hash.json'
  #         prop_path: 'hash'

  #     - name: Set Commit Hash Value to Environment
  #       run: |
  #         commit_hash=$(echo ${{ steps.json-file.outputs.prop }})
  #         echo "pull_request_hash=$commit_hash" >> $GITHUB_ENV
  #         echo "PULL REQUEST HASH"
  #         echo ${{ env.pull_request_hash }}

  #     - name: Deploy to PROD
  #       env:
  #         NAMESPACE: "${{ secrets.OPENSHIFT_PROD_NAMESPACE }}"
  #         APPLICATION_NAME: "${{ secrets.API_APPLICATION_NAME }}"
  #         LICENSE_PLATE: "${{ secrets.LICENSE_PLATE }}"
  #         ENVIRONMENT: "${{ secrets.ENVIRONMENT }}"
  #         DEPLOYMENT_CONFIG: api-dc-template.yaml
  #         IMAGE_TAG: ${{ env.pull_request_hash }}-prod
  #       run: |
  #         ./.github/helpers/deploy.sh 
  
  # PROD-health-check:
  #   runs-on: ubuntu-latest
  #   environment: Prod
  #   needs: [DPIA-API-Build-Tag-Push, DEV-deploy, DEV-health-check, TEST-tag-dpia-api-image, TEST-deploy, TEST-health-check, PROD-tag-dpia-api-image, PROD-deploy]
  #   steps:
    
  #     - uses: actions/checkout@v2
    
  #     - name: Cluster Login
  #       uses: redhat-developer/openshift-actions@v1.1
  #       with:
  #         openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
  #         parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_SA_PASSWORD }}"}'
  #         cmd: |
  #           'version'
            
  #     - name: Health Check PROD deployment
  #       env:
  #         NAMESPACE: "${{ secrets.OPENSHIFT_PROD_NAMESPACE }}"
  #         APPLICATION_NAME: "${{ secrets.API_APPLICATION_NAME }}"
  #         LICENSE_PLATE: "${{ secrets.LICENSE_PLATE }}"
  #         ENVIRONMENT: "${{ secrets.ENVIRONMENT }}"
  #       run: |
  #         ./.github/helpers/application-health.sh

name: DEV Build and Deploy DPIA API

on:
  push:
    branches: [main]
    paths:
      - "src/backend/**"
  workflow_dispatch:
  
jobs:
  build-dpia-api-image:
    environment: Dev
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Cluster Login -> TOOLS Namespace
        uses: redhat-developer/openshift-actions@v1.1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
          parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_TOOLS_SA_PASSWORD }}"}'
          cmd: |
            'version'
            
      - name: Login to Openshift Docker
        run : |
          docker login ${{ secrets.OPENSHIFT4_PUBLIC_IMAGE_REPOSITORY_BASE_URL }} -u ${{ secrets.OPENSHIFT4_TOOLS_SA_USERNAME }} -p ${{ secrets.OPENSHIFT4_TOOLS_SA_PASSWORD }}
          
      - name: Build the Docker image
        run: |
          docker-compose build dpia-api
      
      - name: Docker List Images
        run: |
          docker image ls 
          
      - name: Set Commit Hash for Image Tag
        run: |
          commit_hash=$(echo $(git rev-parse --short HEAD))
          echo "pull_request_hash=$commit_hash" >> $GITHUB_ENV
          
      - name: Create JSON file for Image Tag State
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: 'pull-request-hash.json'
          json: '{ "hash":"${{ env.pull_request_hash }}" }'
          
      - name: Upload JSON file
        uses: actions/upload-artifact@v3
        with: 
          name: pull-request-hash.json
          path: pull-request-hash.json
        
      
      - name: Docker Tag Version
        run: |
          docker tag cirmo-dpia_dpia-api ${{ secrets.OPENSHIFT4_API_PUBLIC_IMAGE_REPOSITORY }}:${{ env.pull_request_hash }}
      
      - name: Docker List Images
        run: |
          docker image ls 
          
      - name: Docker Push Version
        run: |
          docker push ${{ secrets.OPENSHIFT4_API_PUBLIC_IMAGE_REPOSITORY }}:${{ env.pull_request_hash }}
          
  deploy-to-dev:
    runs-on: ubuntu-latest
    environment: Dev
    needs: build-dpia-api-image
    steps:
    
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Cluster Login -> DEV Namespace
        uses: redhat-developer/openshift-actions@v1.1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
          parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_SA_PASSWORD }}"}'
          cmd: |
            'version'
            
      - name: Download JSON artifact
        uses: actions/download-artifact@v3
        with:
          name: pull-request-hash.json
          
      - name: Read JSON File
        id: json-file
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'pull-request-hash.json'
          prop_path: 'hash'
          
      - name: Set Commit Hash Value to Environment
        run: |
          commit_hash=$(echo ${{ steps.json-file.outputs.prop }})
          echo "pull_request_hash=$commit_hash" >> $GITHUB_ENV
          echo "PULL REQUEST HASH"
          echo ${{ env.pull_request_hash }}
            
      - name: Deploy to DEV
        env:
          NAMESPACE: "${{ secrets.OPENSHIFT_DEV_NAMESPACE }}"
          APPLICATION_NAME: "${{ secrets.API_APPLICATION_NAME }}"
          LICENSE_PLATE: "${{ secrets.LICENSE_PLATE }}"
          ENVIRONMENT: "${{ secrets.ENVIRONMENT }}"
          DEPLOYMENT_CONFIG: api-dc-template.yaml
          IMAGE_TAG: ${{ env.pull_request_hash }}
        run: |
          ./.github/helpers/deploy.sh 
    
  health-check:
    runs-on: ubuntu-latest
    environment: Dev
    needs: [build-dpia-api-image, deploy-to-dev]
    steps:
    
      - uses: actions/checkout@v2
    
      - name: Cluster Login
        uses: redhat-developer/openshift-actions@v1.1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
          parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_SA_PASSWORD }}"}'
          cmd: |
            'version'
            
      - name: Health Check DEV deployment
        env:
          NAMESPACE: "${{ secrets.OPENSHIFT_DEV_NAMESPACE }}"
          APPLICATION_NAME: "${{ secrets.API_APPLICATION_NAME }}"
          LICENSE_PLATE: "${{ secrets.LICENSE_PLATE }}"
          ENVIRONMENT: "${{ secrets.ENVIRONMENT }}"
        run: |
          ./.github/helpers/application-health.sh
          
  tag-dpia-api-test:
    environment: Test
    runs-on: ubuntu-latest
    needs: [build-dpia-api-image, deploy-to-dev, health-check]
    steps:
    
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Cluster Login -> TOOLS Namespace
        uses: redhat-developer/openshift-actions@v1.1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
          parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_TOOLS_SA_PASSWORD }}"}'
          cmd: |
            'version'
            
      - name: Login to Openshift Docker
        run : |
          docker login ${{ secrets.OPENSHIFT4_PUBLIC_IMAGE_REPOSITORY_BASE_URL }} -u ${{ secrets.OPENSHIFT4_TOOLS_SA_USERNAME }} -p ${{ secrets.OPENSHIFT4_TOOLS_SA_PASSWORD }}
        
      - name: Download JSON artifact
        uses: actions/download-artifact@v3
        with:
          name: pull-request-hash.json
          
      - name: Read JSON File
        id: json-file
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'pull-request-hash.json'
          prop_path: 'hash'
          
      - name: Set Commit Hash Value to Environment
        run: |
          commit_hash=$(echo ${{ steps.json-file.outputs.prop }})
          echo "pull_request_hash=$commit_hash" >> $GITHUB_ENV
          echo "PULL REQUEST HASH"
          echo ${{ env.pull_request_hash }}
        
      - name: Update tag for Imagestream
        env:
          TOOLS_NAMESPACE: "${{ secrets.TOOLS_NAMESPACE }}"
          DPIA_COMPONENT: "dpia-api"
          HASH_IMAGE: "${{ env.pull_request_hash }}"
          ENVIRONMENT: "test"
        run: |
          ./.github/helpers/tag-imagestream.sh
          
  deploy-dpia-api-test:
    environment: Test
    runs-on: ubuntu-latest
    needs: [build-dpia-api-image, deploy-to-dev, health-check, tag-dpia-api-test]
    steps:
      
      - name: Checkout Repository
        uses: actions/checkout@v2 
        
      - name: Cluster Login -> TEST Namespace
        uses: redhat-developer/openshift-actions@v1.1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
          parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_SA_PASSWORD }}"}'
          cmd: |
            'version'
        
      - name: Download JSON artifact
        uses: actions/download-artifact@v3
        with:
          name: pull-request-hash.json
          
      - name: Read JSON File
        id: json-file
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'pull-request-hash.json'
          prop_path: 'hash'
          
      - name: Set Commit Hash Value to Environment
        run: |
          commit_hash=$(echo ${{ steps.json-file.outputs.prop }})
          echo "pull_request_hash=$commit_hash" >> $GITHUB_ENV
          echo "PULL REQUEST HASH"
          echo ${{ env.pull_request_hash }}
          
      - name: Deploy to TEST
        env:
          NAMESPACE: "${{ secrets.OPENSHIFT_TEST_NAMESPACE }}"
          APPLICATION_NAME: "${{ secrets.API_APPLICATION_NAME }}"
          LICENSE_PLATE: "${{ secrets.LICENSE_PLATE }}"
          ENVIRONMENT: "${{ secrets.ENVIRONMENT }}"
          DEPLOYMENT_CONFIG: api-dc-template.yaml
          IMAGE_TAG: ${{ env.pull_request_hash }}-test
        run: |
          ./.github/helpers/deploy.sh 
    
  tag-dpia-api-prod:
    environment: Prod
    runs-on: ubuntu-latest
    needs: [build-dpia-api-image, deploy-to-dev, health-check, tag-dpia-api-test, deploy-dpia-api-test]
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Cluster Login -> TOOLS Namespace
        uses: redhat-developer/openshift-actions@v1.1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
          parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_TOOLS_SA_PASSWORD }}"}'
          cmd: |
            'version'

      - name: Login to Openshift Docker
        run : |
          docker login ${{ secrets.OPENSHIFT4_PUBLIC_IMAGE_REPOSITORY_BASE_URL }} -u ${{ secrets.OPENSHIFT4_TOOLS_SA_USERNAME }} -p ${{ secrets.OPENSHIFT4_TOOLS_SA_PASSWORD }}

      - name: Download JSON artifact
        uses: actions/download-artifact@v3
        with:
          name: pull-request-hash.json

      - name: Read JSON File
        id: json-file
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'pull-request-hash.json'
          prop_path: 'hash'

      - name: Set Commit Hash Value to Environment
        run: |
          commit_hash=$(echo ${{ steps.json-file.outputs.prop }})
          echo "pull_request_hash=$commit_hash" >> $GITHUB_ENV
          echo "PULL REQUEST HASH"
          echo ${{ env.pull_request_hash }}

      - name: Update tag for Imagestream
        env:
          TOOLS_NAMESPACE: "${{ secrets.TOOLS_NAMESPACE }}"
          DPIA_COMPONENT: "dpia-api"
          HASH_IMAGE: "${{ env.pull_request_hash }}"
          ENVIRONMENT: "prod"
        run: |
          ./.github/helpers/tag-imagestream.sh
          
  deploy-dpia-api-prod:
    environment: Prod
    runs-on: ubuntu-latest
    needs: [build-dpia-api-image, deploy-to-dev, health-check, tag-dpia-api-test, deploy-dpia-api-test, tag-dpia-api-prod]
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v2 

      - name: Cluster Login -> PROD Namespace
        uses: redhat-developer/openshift-actions@v1.1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT4_SERVER_URL }}
          parameters: '{"apitoken": "${{ secrets.OPENSHIFT4_SA_PASSWORD }}"}'
          cmd: |
            'version'

      - name: Download JSON artifact
        uses: actions/download-artifact@v3
        with:
          name: pull-request-hash.json

      - name: Read JSON File
        id: json-file
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'pull-request-hash.json'
          prop_path: 'hash'

      - name: Set Commit Hash Value to Environment
        run: |
          commit_hash=$(echo ${{ steps.json-file.outputs.prop }})
          echo "pull_request_hash=$commit_hash" >> $GITHUB_ENV
          echo "PULL REQUEST HASH"
          echo ${{ env.pull_request_hash }}

      - name: Deploy to TEST
        env:
          NAMESPACE: "${{ secrets.OPENSHIFT_TEST_NAMESPACE }}"
          APPLICATION_NAME: "${{ secrets.API_APPLICATION_NAME }}"
          LICENSE_PLATE: "${{ secrets.LICENSE_PLATE }}"
          ENVIRONMENT: "${{ secrets.ENVIRONMENT }}"
          DEPLOYMENT_CONFIG: api-dc-template.yaml
          IMAGE_TAG: ${{ env.pull_request_hash }}-prod
        run: |
          ./.github/helpers/deploy.sh 
